package com.deniskrr.coronamalware.home

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.fragment.app.Fragment
import androidx.fragment.app.viewModels
import com.deniskrr.coronamalware.databinding.LocalFragmentBinding
import com.google.android.gms.maps.CameraUpdateFactory
import com.google.android.gms.maps.GoogleMap
import com.google.android.gms.maps.OnMapReadyCallback
import com.google.android.gms.maps.model.LatLng


class LocalFragment : Fragment(), OnMapReadyCallback {

    private var map: GoogleMap? = null
    private lateinit var binding: LocalFragmentBinding
    private val viewModel: LocalViewModel by viewModels()

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        binding = LocalFragmentBinding.inflate(inflater)

        binding.map.onCreate(savedInstanceState)
        binding.map.getMapAsync(this)

        binding.btnInfected.setOnClickListener {
            val newValue = viewModel.nearbyCases.value!! + 1
            viewModel.nearbyCases.value = newValue
            binding.btnInfected.isEnabled = false
        }

        binding.viewModel = viewModel
        binding.lifecycleOwner = this
        return binding.root
    }

    override fun onResume() {
        super.onResume()
        binding.map.onResume()
    }

    override fun onStart() {
        super.onStart()
        binding.map.onStart()
    }

    override fun onStop() {
        super.onStop()
        binding.map.onStop()
    }

    override fun onPause() {
        binding.map.onPause()
        super.onPause()
    }

    override fun onDestroy() {
        binding.map.onDestroy()
        super.onDestroy()
    }

    override fun onLowMemory() {
        super.onLowMemory()
        binding.map.onLowMemory()
    }

    override fun onMapReady(googleMap: GoogleMap?) {
        map = googleMap!!
        map?.setMinZoomPreference(15f)
        val coordinates =
            LatLng(45.413778, 23.374749)

        map?.moveCamera(CameraUpdateFactory.newLatLng(coordinates))
    }


}